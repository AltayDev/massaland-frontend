{"version":3,"file":"IProvider.js","sourceRoot":"","sources":["../../../src/provider/IProvider.ts"],"names":[],"mappings":"","sourcesContent":["import { IAccountDeletionResponse } from './AccountDeletion';\nimport { IAccountImportResponse } from './AccountImport';\nimport { IAccount } from '../account/IAccount';\nimport { IAccountDetails } from '../account';\n\nexport type INetworkName = 'mainnet' | 'buildnet' | 'labnet';\n\nexport type INetwork = {\n  name: INetworkName;\n  url: string;\n  chainId: bigint;\n};\n\n/**\n * This interface represents a general provider definition with its methods\n */\nexport interface IProvider {\n  name(): string;\n  accounts(): Promise<IAccount[]>;\n  importAccount(\n    publicKey: string,\n    privateKey: string,\n  ): Promise<IAccountImportResponse>;\n  deleteAccount(address: string): Promise<IAccountDeletionResponse>;\n  getNodesUrls(): Promise<string[]>;\n  getNetwork(): Promise<string>;\n  generateNewAccount(name: string): Promise<IAccountDetails>;\n  connect(): Promise<boolean>;\n  disconnect(): Promise<boolean>;\n  connected(): boolean;\n  enabled(): boolean;\n  listenAccountChanges(callback: (base58: string) => void):\n    | {\n        unsubscribe: () => void;\n      }\n    | undefined;\n\n  listenNetworkChanges(callback: (network: string) => void):\n    | {\n        unsubscribe: () => void;\n      }\n    | undefined;\n}\n"]}