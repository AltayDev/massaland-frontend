{"version":3,"file":"MassaStationDiscovery.js","sourceRoot":"","sources":["../../../src/massaStation/MassaStationDiscovery.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AAEH,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAG9C;;GAEG;AACH,MAAM,CAAC,MAAM,2BAA2B,GACtC,sCAAsC,CAAC;AAEzC;;GAEG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAG,6BAA6B,CAAC;AAEzE;;GAEG;AACH,MAAM,CAAC,MAAM,6BAA6B,GAAG,+BAA+B,CAAC;AAE7E,MAAM,qBAAqB,GAAG,cAAc,CAAC;AAC7C,MAAM,uBAAuB,GAAG,YAAY,CAAC;AAC7C;;;;;GAKG;AACH,MAAM,OAAO,qBAAsB,SAAQ,YAAY;IAC7C,YAAY,GAAG,KAAK,CAAC;IAE7B;;;;;;;;;;;;;OAaG;IACH;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,cAAc;QACzB,MAAM,IAAI,GAAG,MAAM,UAAU,CAC3B,2BAA2B,EAC3B,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CACnC,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,CAAC,IAAI,KAAK,qBAAqB;gBACrC,MAAM,CAAC,MAAM,KAAK,uBAAuB,CAC5C,CAAC;YACF,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,YAAY,CAAC,CAAC;aACtD;SACF;aAAM,IAAI,IAAI,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;SAC1C;IACH,CAAC;CACF","sourcesContent":["/**\n * This file defines a TypeScript class named MassaStationDiscovery.\n * The class is being used to recursively search for a connection to MassaStation's server\n * and if so report this via emitting messages.\n *\n * @remarks\n * - If you are only looking to use our library, the connector MassaStationDiscovery will not be useful to you.\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\n\nimport { EventEmitter } from 'events';\nimport { getRequest } from './RequestHandler';\nimport { PluginManagerBody } from './types';\n\n/**\n * Url used for the MassaStation discovery and pinging the MassaStation server's index.html\n */\nexport const MASSA_STATION_DISCOVERY_URL =\n  'https://station.massa/plugin-manager';\n\n/**\n * A message emitted on successful MassaStation discovery\n */\nexport const ON_MASSA_STATION_DISCOVERED = 'ON_MASSA_STATION_DISCOVERED';\n\n/**\n * A message emitted on MassaStation disconnect\n */\nexport const ON_MASSA_STATION_DISCONNECTED = 'ON_MASSA_STATION_DISCONNECTED';\n\nconst MS_WALLET_PLUGIN_NAME = 'Massa Wallet';\nconst MS_WALLET_PLUGIN_AUTHOR = 'Massa Labs';\n/**\n * This file defines a TypeScript class named MassaStation.\n * The class is being used to recursively ping MassaStation's server\n * and if a response is received emit a message so MassaStation can be enlisted as\n * a wallet provider in the `Connector` class.\n */\nexport class MassaStationDiscovery extends EventEmitter {\n  private isDiscovered = false;\n\n  /**\n   * MassaStation constructor\n   *\n   * @remarks\n   * - It creates a timeout using the given `pollIntervalMillis` argument on every trigger of which\n   *  the MassaStation pinging is triggered and if a successful response is fetched,\n   * a message `ON_MASSA_STATION_DISCOVERED` is emitted that MassaStation has been discovered\n   * as a wallet provider upon which the `Connector` class will enlist MassaStation as a wallet provider\n   * - If once found, but then disconnected the following message `ON_MASSA_STATION_DISCONNECTED` is being emitted\n   *  so that the `Connector` class delists MassaStation as a wallet provider\n   *\n   * @returns An instance of the MassaStation class.\n   *\n   */\n  public constructor() {\n    super();\n\n    this.startListening = this.startListening.bind(this);\n  }\n\n  /**\n   * A method to start listening for a connection to MassaStation's server.\n   *\n   * @returns void\n   */\n  public async startListening(): Promise<void> {\n    const resp = await getRequest<PluginManagerBody>(\n      MASSA_STATION_DISCOVERY_URL,\n      2000,\n    );\n\n    if (!resp.isError) {\n      const walletModule = resp.result.find(\n        (module) =>\n          module.name === MS_WALLET_PLUGIN_NAME &&\n          module.author === MS_WALLET_PLUGIN_AUTHOR,\n      );\n      if (walletModule) {\n        this.isDiscovered = true;\n        this.emit(ON_MASSA_STATION_DISCOVERED, walletModule);\n      }\n    } else if (this.isDiscovered) {\n      this.isDiscovered = false;\n      this.emit(ON_MASSA_STATION_DISCONNECTED);\n    }\n  }\n}\n"]}